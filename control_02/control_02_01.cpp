// Контрольная работа № 2 (06 мая 2022 года)
// Вариант 5

// Задача № 1

#include <iostream> // подключение стандартной библиотеки ввода-вывода
#include <cmath> // подключение стандартной математической библиотеки
using namespace std; // настройка стандартного пространства имён

class Quad { // класс квадратов, заданных длинной стороны
    private:
        double a; // длина стороны
    public:
        Quad() { // конструктор по умолчанию
            a = 1;
        }
        Quad(double _a) { // конструктор
            a = _a;
        }
        double perimeter() { // метод нахождения периметра квадрата
            return 4 * a;
        }
        double square() { // метод нахождения площади квадрата
            return a * a;
        }
        virtual double lenRadVecDiag() = 0; // виртуальный метод нахождения расстояние от точки пересечения диагоналей квадрата до начала координат
};

class coordQuad : public Quad { // класс квадратов, заданных координатами своих левых нижних и правых верхних вершин
    private:
        double x1, y1, x2, y2; // координаты левой нижней и правой верхней вершин
    public:
        coordQuad() : Quad() { // конструктор по умолчанию
            x1 = 0;
            y1 = 0;
            x2 = 1;
            y2 = 1;
        }
        coordQuad(double _x1, double _y1, double _x2, double _y2) : Quad(sqrt(((_x1 - _x2) * (_x1 - _x2) + (_y1 - _y2) * (_y1 - _y2)) / 2)) { // конструктор
            x1 = _x1;
            y1 = _y1;
            x2 = _x2;
            y2 = _y2;
        }
        double lenRadVecDiag() { // реализация виртуального метода из родительского класса
            double x = (x1 + x2) / 2;
            double y = (y1 + y2) / 2;
            return sqrt(x * x + y * y);
        }
};

int main() { // главная функция
    double x1, y1, x2, y2;
    cout << "Введите координаты левой нижней и справой верхней вершины квадрата:" << endl;
    cin >> x1 >> y1 >> x2 >> y2;
    coordQuad quad(x1, y1, x2, y2);
    cout << "Периметр квадрата: " << quad.perimeter() << endl;
    cout << "Площадь квадрата: " << quad.square() << endl;
    cout << "Расстояние от точки пересечения диагоналей квадрата до начала координат: " << quad.lenRadVecDiag() << endl;
}